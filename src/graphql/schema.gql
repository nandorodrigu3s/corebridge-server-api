type User {
  firstName: String!
  lastName: String!
  assets: Int
}

type Customer {
  """Example field (placeholder)"""
  exampleField: Int!
}

type AuthData {
  token: String!
  user: User!
}

type Query {
  getUser(username: String!): User
  getByUserId(userId: String!): User
  customer(id: Int!): Customer!
}

type Mutation {
  login(authInput: Auth!): AuthData
  createUser(createUserInput: CreateUser!): User
  createCustomer(createCustomerInput: CreateCustomerInput!): Customer!
  updateCustomer(updateCustomerInput: UpdateCustomerInput!): Customer!
  removeCustomer(id: Int!): Customer!
}

input Auth {
  username: String!
  password: String!
}

input CreateUser {
  firstName: String!
  lastName: String!
  username: String!
  password: String!
}

input CreateCustomerInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateCustomerInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}